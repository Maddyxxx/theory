Здравствуйте, меня зовут Роман, сам я родом из Петербурга, разработчик с опытом почти 5 лет, сейчас заканчиваю 
работу на финансовую организацию и ищу новое место работы. 
На настоящий момент не подлежу призыву (после технички могу скинуть документы).

живу в москве на криворожской улице, метро нахимовский проспект, нагорный район

Себя квалифицирую как мидл+ разработчика, ориентируюсь на 350к, но думаю что смогу и больше, зависит от компании

По квалификации и опыту:
образование высшее, техническое. Работал в реальном секторе экономистом, в 20 году 
прошёл курсы и устроился сис-админом в компанию агрегатор по коммерческой недвижимости на python+golang. 

---------------------------------------------------------
# RENTAG (РА)
Март 2020 — Март 2021
---------------------------------------------------------
Проект предполагал автоматизацию докуметрооборота (переход на электронный документооборот), работа с ip-телефонией и Asterisk, автоматизация ит-процессов на предприятии 

Я работал над сервисами для работы сайта, систематизировал ит-инфраструктуру предприятия, решал возникающие проблемы связанные с интеграцией программ и автоматизацией развертывания
по поводу ip телефонии - требовалось автоматизировать сбор аналитики по звонкам менеджеров на предприятии, я интегрировал ип телефонию в самописную црм
* Самые старые части кода приносившие большую часть дохода были написаны на питоне,
и требовалось автоматизировать тесты по ним. 
Параллельно шёл переезд на новую платформу написанную на Golang. 
Поэтому через полгода после прихода на проект я перешёл из автоматизации тестирования на питоне в разработку на Go. 

писал юнит и интеграционные тесты, взаимодействовал с тестировщиками и аналитиками. Писал бизнес и инфраструктурную логику. Участвовал в дейликах, ревью, ретро. Разбирал инциденты и оптимизировал работу с базой
наборы тестов для сервиса кешбеков. Перенёс часть логики по сбору данных о покупках пользователей и их данных

По архитектуре проекта - была монолитная архитектура с попытками создания модульной/микросервисной. Так как предприятие было из реального сектора и айти департамент не был ключевым то проекты развивались по остаточному принципу после закрытия потребностей бизнеса. 

Самая сложная задача - настройка сбора информации с телеком станций и пробрасывание этой информации из астерикса в ЦРМ-систему на предприятии с дальнейшей расшифровкой (звонки менеджеров клиентам)

---------------------------------------------------------
опыт. !у вас отличный вопрос! не волновался
---------------------------------------------------------
я был достатчно далек от пользователя, были хранилища данных с историей заказов, были программ по кещбэкам в зависимости от партнерах, NDA, рассказать все вряд ли смогу
---------------------------------------------------------

* В этой должности я проработал до марта 2021. Ушёл по причинам низкой оплаты труда, отсутствие роста, высокой нагрузки. 

* Команда была небольшая, дружесткая, уютная: я + руководитель

---------------------------------------------------------
# Andersen
Апрель 2021 — Сентябрь 2023
---------------------------------------------------------
Компания - достаточно крупный аутсорс (интегратор) работающий преимущественно на рынки Европы. 
Приходил на проект связанный с организацией доставки еды. 

Проект предполагал развитие и доработку сервисов: каталог, рекомендательный, кэшбеки, инстументы техподдержки. 
Проект состоял из частей: 
- инфа от сервисов по оплате
- инфа от парнетнеров по продуктам
- высчитывание скидки на основе этих данных
- составление профиля покупателся
- платформеннная - обеспечение инфраструктыры для работы этих сервисов

Я работал над частью составление профиля привычек покупателя (была большая работа с данными, использовались дата саентистские инструменты) + напиcание тестов
работал над усовершенствованием алгоритмов поиска продуктов, подбором рекомендаций на основе привычек пользователей
много внес в сервис автоматизации поддержки, в частности внедрил алгоритм сборки информации об инцидентах для ускорения ответа поддержки и помощи пользователю

---------------------------------------------------------
задача полегче
---------------------------------------------------------
считал скидки, условно сколько денег мы возвращаем в зависимости от парттнерства с магазином, здесь работал напрямую с магазинами и курьерами. Здесь я должен был написать интеграции с новыми магазинами или группами магазинов (холдингами), для каждого их них сис аналикики подготавливали документ об обмене данными, проводили первичный анализ и составляли диаграммы обмена данными.
На мне лежали задачи проводить такие интеграции, т.е. 
написать сервис, подключавшийся к их контуру, написать сервис стягивания данных с некоторой периодичностью, написать сервис обмена метаданными, рекламная информация, скидочная, телеметрия по пользователям
все это нужно было протестировать и довести до прода, после вывода в прод необходимо было в первый месяц-2 провести мониторинг работы, решить все возникающие проблемы, возможно настроить метрики и передать в эксплуатацию
---------------------------------------------------------
это была сложная задача
---------------------------------------------------------
я разработал, прошел код ревью и задеплоил сервис по доставке заказов. был добавлен новый платежный шлюз. 

в рамках разработки сервиса для нового платежного шлюза я вместе с командой, системными аналитиками, тим лидом и другими разработчиками написал сервис подключения к их шлюзу, согласовали форматы обмена данными, поговорил с их разработчиками, выяснил все спорные вопросы: какието поля были плохо документированы, кикаето имели неявный функционал. провел все этапы интеграции в проект. взаимодействие и сис аналитиками. мы были на прямой связи с разраб

провел тестирование, вместе с ними на тестовом контуре прогнали некий объем данных покрыл этот код тестами юнит и интерграционными тестами, вместе с командой настроил CICD и пайплайн, задеплоили на стейдж. некоторое время погоняли данные с прода и вывели в открытый доступ.
на мне лежало написание сервиса общения с их шлюзом, т.е. установка соединения, обмен ключами доступа, регистрация нашего клиента клиента в их сервисе 
---------------------------------------------------------
На нём было большое количество команд, общее количество задействованных людей доходило до 40. 
В нашей команде было 12 человек, все либо бекенд разработчики go, либо тестировщики (фулстек). 
Руководитель был с нашей стороны и со стороны заказчика, задачи нарезали старшие специалисты - 
я брал их в разработку и решал инциденты вместе с поддержкой как L3 специалист 
(заступал на 12 часовые дежурства в рамках которых должен был среагировать на инцидент в первые 15 минут 
и вынести первичное решение в рамках 4 часов).

- 6 разработчиков + руководитель + 5 тестировщиков + руководитель

---------------------------------------------------------
опыт со стороны пользователя
---------------------------------------------------------
система аналогична системе яндекс еде, сервис по доставке продуктов, лекарств, алкоголя, в европе с этим легче, в грузии еще легче.
Состояло из моб приложений, вэб версия, я занимался бэкендом, от пользовательской части далек, но вы можете посмотреть яндекс еду. 
Добавление платежных средв, создание заказов
Я работал над сервисами, отвечавшими за интеграцию с новыми магазинами, я так же ответчал за добавление и интеграцию нового шлюза
---------------------------------------------------------
Суммируя: go + gin + gorm  + MS SQL + Postgre + Kafka + ELK/Prometheus/Grafana + docker/kuber

-----------------------------------------
самые интересные задачи:
-----------------------------------------
в рамках тикета пришла задача на некорректность данных. в одном месте данные изменялись, 
некоторое время висели и затем откатывались к первоначальному состоянию
оказалось что в в базе существовала хранимая процедура которая отрабатывала на определенный тип продукта

еще из сложного была интеграция нового платежного шлюза - сложности были во взаимодействии со сторонней командой и плохо документированном апи
------------------------------------
горжусь тем, что в сжатые сроки смог реализовать задачу, в итоге все остались довольны, дали премию
------------------------------------
общение с тимлидом: по окончании двухнедельных спринтов были ретро и раз в полгода был перф ревью

---------------------------------------------------------
# Кредит МКХ
сентябрь 2023 — январь 2025
---------------------------------------------------------

компания занимается представлением фин ликвидности физ и юр лицам. размер команды большой, только в моей команде было 8-12 человек. 
я работал над сервисами задействоваными в функционла клоиентского кабинета, оценки имущества, документооборота.
команды были отличные, мне все нравилось, однако сейчас чувствую что перерос даваемые задачи, хочелось бы развитие технического роста и хотелось бы иметь чуть больше влияния на команду.

работал с сервисами  кредитного конвеера:
- сервис оценки залогового имущества
- сервис сбора информации по кредитополучателям (БКИ + наш внутренний)
- сервис процессинга сбора документов, ускорение принятие решения по заявкам
- доработка личного кабинета пользователя с платежами, возможностью досрочного погашения и удобными способами оплаты
- сервис мониторинга сбора логов 

Всего в проекте на go было в районе 30ти микросервисов, с большей частью из которых я поработал

- активно участвовал в создании архитектуры на уровне инфраструктуры и 5ти сервисов: сервис обработки заявок на займы, сервис анкет, сервис рефинансов, сервис промокодов
- занимался поддержкой текущих сервисов и добавлением нового функционала, в частности api-методов, доработка логики с целью более быстрой обработки заявок
- переносил монолит с php на сервисы на golang, выпиливали ненужный и устаревший функционал, приходилось много работать с легаси кодом
- много приходилось работать с запросами в бд, хранимыми процедурами, с переходом с ORM на чистый SQL

основная часть данных обрабатывалась postgre sql 

## из интересных задач:
- рутинная - перенос взаимодейтсвия с базой данных из хранимых процедур на SQL код в приложении (делалось в рамках отказа от БД Oracle и перехода на БД Postgres)
бесконечное повышение покрытия кода, перенос с одной технологии на другую. Переезд из базы данных Oracle на базу данных BuzzGear. Этот переезд связанс тем, что происходит отказ от программного обеспечения из недружественных стран и переезд с одной базы данных на другую, особенно с переносом хранимых процедур. Это достаточно рутинная, долгая процедура, которая может длиться бесконечно
- клёвая - развитие опенсорс кодогенератора ранее использовавшегося для написания сервисов но заброшенного автором. Нам требовалось писать новые сервисы но старые возможности уже не устраивали - в результате форкнули опенсорс решение и доделали под наши потребности

По архитектуре проекта - осуществлялся переезд с монолитной архитектуры написанной частично на пхп частично на голанге на полностью микросервисную архитектуру. На текущий момент сущетсвует порядка 12-15 микросервисов, некоторые из них - концентраторы для внешних интеграций.


